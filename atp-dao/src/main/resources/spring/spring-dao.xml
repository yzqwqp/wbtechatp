<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:jdbc="http://www.springframework.org/schema/jdbc"
     xmlns:context="http://www.springframework.org/schema/context"
     xmlns:jee="http://www.springframework.org/schema/jee"
     xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
     http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd">

	<context:property-placeholder location="classpath*:/dao.properties"/>    
     
 	<bean id="parentDataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<!-- 池启动时创建的连接数量-->
		<property name="initialSize" value="${datasource.initialSize}" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${datasource.minIdle}" />
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${datasource.maxIdle}" />
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${datasource.maxActive}" />
		<!-- 等待超时以毫秒为单位，在抛出异常之前，池等待连接被回收的最长时间（当没有可用连接时）。设置为-1表示无限等待。 -->
		<property name="maxWait" value="${datasource.maxWait}" />
		<!-- 设置自动回收超时连接 -->
		<!--设置sql语句的自动提交，即执行一条sql，都立即提交-->
		<property name="defaultAutoCommit" value="${datasource.defaultAutoCommit}"/>
		<!--设置自动回收超时连接 -->
        <property name="removeAbandoned" value="${datasource.removeAbandoned}" />
        <!-- 自动回收超时时间(以秒数为单位) -->
        <property name="removeAbandonedTimeout" value="${datasource.removeAbandonedTimeout}" />
        <!-- 设置的Evict线程的时间，单位ms，大于0才会开启evict检查线程 -->
        <property name="timeBetweenEvictionRunsMillis" value="${datasource.timeBetweenEvictionRunsMillis}" />
        <!-- 在执行检查时超时时间 -->
		<property name="validationQuery" value="${datasource.validationQuery}" />
		<!-- 代表每次检查链接的数量，设置和maxActive一样大 -->
		<property name="numTestsPerEvictionRun" value="${datasource.maxActive}" />
		<!-- 设置在自动回收超时连接的时候打印连接的超时错误 -->
		<property name="logAbandoned" value="true" />
	</bean>
	
	<!--Atp dataSource-->
	<bean id="atpDataSource" parent="parentDataSource" destroy-method="close">
 		<!-- destroy-method="close" -->
		<property name="driverClassName" value="${datasource.driver}" />
		<property name="url" value="${datasource.url}" />
		<property name="username" value="${datasource.username}" />
		<property name="password" value="${datasource.password}"/>
	</bean>
	<!--Apptms dataSource-->
	<bean id="apptmsDataSource" parent="parentDataSource" destroy-method="close">
 		<!-- destroy-method="close" -->
		<property name="driverClassName" value="${datasource2.driver}" />
		<property name="url" value="${datasource2.url}" />
		<property name="username" value="${datasource2.username}" />
		<property name="password" value="${datasource2.password}"/>
	</bean>
	<!--动态数据源的配置-->
    <bean id="dynamicDataSource" class="com.uusoft.atp.dao.utils.DynamicDataSource">
        <property name="defaultTargetDataSource" ref="atpDataSource"/>
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry key="atpDataSource" value-ref="atpDataSource"/>
                <entry key="apptmsDataSource" value-ref="apptmsDataSource"/>
            </map>
        </property>
    </bean>

    <!-- define the SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dynamicDataSource" />
        <!--
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        -->
        <property name="mapperLocations" value="classpath:com/uusoft/atp/dao/*.xml"/>
    </bean>
    
    <!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.uusoft.atp.dao" />
    </bean>
	
    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dynamicDataSource" />
    </bean>
    
    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

	<!-- interception transatcion -->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
    
    <!-- 配置数据库注解aop -->
    <bean id="dataSourceAspect" class="com.uusoft.atp.dao.utils.DataSourceAspect"/>
    
    <aop:config>
        <aop:pointcut id="transactionPointcut" expression="execution(* com.uusoft.atp.service..*Impl.*(..))"/>
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" order="2"/>
        <!--数据源选择切面,保证在事务开始之前执行-->
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="dataSourceAspect"  order="1" />
    </aop:config>
</beans>
